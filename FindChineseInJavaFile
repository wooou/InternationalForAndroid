
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class FindChineseInJava {

	static String path = "F:\\projects\\XXXX";
	private static StringBuffer outputString = new StringBuffer();
	private static StringBuffer outputLinesString = new StringBuffer();

	public static void main(String[] args) {
		traverseFolder(path, ".java");
		System.out.println(outputString.toString());
	}


	public static boolean checkChinese(String str) {

		Pattern p = Pattern.compile("([\u4e00-\u9fa5]+)");
		Matcher m = p.matcher(str);
		if (m.find()) {
			String mv = m.group(0);
			int charIndex = str.indexOf(mv);
			int a = str.indexOf("// ");
			int b = str.indexOf("//");
			if ((a != -1 && a + 3 <= charIndex)
					|| (b != -1 && b + 2 <= charIndex)) {
				return false;
			} else {
				return true;
			}
		} else
			return false;
	}

	public static boolean checkChinese(String str, boolean isFilterNotes) {
		if (isFilterNotes) {
			str = str.trim().replace("\r\n", "");
			if (str.startsWith("//") || str.startsWith("/*")
					|| str.startsWith("*")
					|| str.startsWith("System.out.println")
					|| str.startsWith("CommFunc.PrintLog")
					|| str.startsWith("Utils.PrintLog")
					|| str.startsWith("RtcLog.") || str.startsWith("Log.")) {
				return false;
			}
		}
		return checkChinese(str);
	}

	public static void traverseFolder(String path) {
		File file = new File(path);
		if (file.exists()) {
			File[] files = file.listFiles();
			if (files.length != 0) {
				for (File file2 : files) {
					if (file2.isDirectory()) {
						System.out.println("文件夹:" + file2.getAbsolutePath());
						traverseFolder(file2.getAbsolutePath());
					} else {
						System.out.println("文件:" + file2.getAbsolutePath());
					}
				}
			}
		}
	}

	public static void traverseFolder(String path, String endType) {
		File file = new File(path);
		if (file.exists()) {
			File[] files = file.listFiles();
			if (files.length != 0) {
				for (File file2 : files) {
					if (file2.isDirectory()) {
						traverseFolder(file2.getAbsolutePath(), endType);
					} else if (file2.getName().endsWith(endType)) {
						if (checkFile(file2.getAbsolutePath())) {
							outputString.append("file:\t"
									+ file2.getAbsolutePath() + "\n");
							outputString.append(outputLinesString.toString());
							outputLinesString.delete(0,
									outputLinesString.length());
						}
					}
				}
			}
		}
	}

	public static boolean checkFile(String filePath) {
		boolean tag = false;
		try {
			BufferedReader reader = new BufferedReader(new InputStreamReader(
					new FileInputStream(filePath), "UTF-8"));
			String str = null;
			int line = 0;
			while ((str = reader.readLine()) != null) {
				line++;
				if (checkChinese(str, true)) {
					tag = true;
					outputLinesString
							.append("line(" + line + "):" + str + "\n");
					// System.out.println("line(" + line + "):" + str);
				}
			}
			reader.close();

		} catch (Exception e) {
			e.printStackTrace();
		}
		return tag;
	}

}
